DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Desktop/ruby/gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
DEPRECATION WARNING: Initialization autoloaded the constants Amz::Preferences, Amz::Preferences::Preferable, Amz::Preferences::PreferableClassMethods, Amz::Preferences::Configuration, Amz::AppConfiguration, and Amz::AppDependencies.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload Amz::Preferences, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <top (required)> at /Users/sidefeng/Gem/amz/core/test/dummy/config/environment.rb:5)
